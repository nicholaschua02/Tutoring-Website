{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\TutoringBusiness\\\\Tutoring-Website\\\\src\\\\components\\\\CircleFollow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CircleFollow.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CircleFollow() {\n  _s();\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  }); // Initial mouse position\n  const [circleColor, setCircleColor] = useState('black'); // Initial circle color\n\n  useEffect(() => {\n    function handleMouseMove(e) {\n      // Update mouse position\n      setMousePosition({\n        x: e.pageX,\n        y: e.pageY\n      });\n\n      // Get the background color of the element under the mouse pointer\n      const element = document.elementFromPoint(e.clientX, e.clientY);\n      const backgroundColor = window.getComputedStyle(element).getPropertyValue('background-color');\n\n      // Calculate the opposite color for good contrast\n      const oppositeColor = calculateOppositeColor(backgroundColor);\n      setCircleColor(oppositeColor);\n    }\n    document.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n  function calculateOppositeColor(color) {\n    // Convert color to RGB\n    const match = color.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n    if (!match) return 'white'; // Default to white if unable to parse color\n\n    // Calculate opposite color (inverting each RGB value)\n    const oppositeColor = `rgb(${255 - match[1]}, ${255 - match[2]}, ${255 - match[3]})`;\n    return oppositeColor;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"circle-follow\",\n    style: {\n      left: mousePosition.x,\n      top: mousePosition.y,\n      backgroundColor: circleColor\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(CircleFollow, \"id2vGyGO8MzVM4Q4Y4/bUgOLMHA=\");\n_c = CircleFollow;\nexport default CircleFollow;\nvar _c;\n$RefreshReg$(_c, \"CircleFollow\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CircleFollow","_s","mousePosition","setMousePosition","x","y","circleColor","setCircleColor","handleMouseMove","e","pageX","pageY","element","document","elementFromPoint","clientX","clientY","backgroundColor","window","getComputedStyle","getPropertyValue","oppositeColor","calculateOppositeColor","addEventListener","removeEventListener","color","match","className","style","left","top","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/TutoringBusiness/Tutoring-Website/src/components/CircleFollow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './CircleFollow.css'; // Import CSS file for styling\r\n\r\nfunction CircleFollow() {\r\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 }); // Initial mouse position\r\n  const [circleColor, setCircleColor] = useState('black'); // Initial circle color\r\n\r\n  useEffect(() => {\r\n    function handleMouseMove(e) {\r\n      // Update mouse position\r\n      setMousePosition({ x: e.pageX, y: e.pageY });\r\n\r\n      // Get the background color of the element under the mouse pointer\r\n      const element = document.elementFromPoint(e.clientX, e.clientY);\r\n      const backgroundColor = window.getComputedStyle(element).getPropertyValue('background-color');\r\n\r\n      // Calculate the opposite color for good contrast\r\n      const oppositeColor = calculateOppositeColor(backgroundColor);\r\n      setCircleColor(oppositeColor);\r\n    }\r\n\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n    };\r\n  }, []);\r\n\r\n  function calculateOppositeColor(color) {\r\n    // Convert color to RGB\r\n    const match = color.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\r\n    if (!match) return 'white'; // Default to white if unable to parse color\r\n\r\n    // Calculate opposite color (inverting each RGB value)\r\n    const oppositeColor = `rgb(${255 - match[1]}, ${255 - match[2]}, ${255 - match[3]})`;\r\n    return oppositeColor;\r\n  }\r\n\r\n  return (\r\n    <div className=\"circle-follow\" style={{ left: mousePosition.x, top: mousePosition.y, backgroundColor: circleColor }}></div>\r\n  );\r\n}\r\n\r\nexport default CircleFollow;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC,CAAC,CAAC;EACpE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEzDC,SAAS,CAAC,MAAM;IACd,SAASW,eAAeA,CAACC,CAAC,EAAE;MAC1B;MACAN,gBAAgB,CAAC;QAAEC,CAAC,EAAEK,CAAC,CAACC,KAAK;QAAEL,CAAC,EAAEI,CAAC,CAACE;MAAM,CAAC,CAAC;;MAE5C;MACA,MAAMC,OAAO,GAAGC,QAAQ,CAACC,gBAAgB,CAACL,CAAC,CAACM,OAAO,EAAEN,CAAC,CAACO,OAAO,CAAC;MAC/D,MAAMC,eAAe,GAAGC,MAAM,CAACC,gBAAgB,CAACP,OAAO,CAAC,CAACQ,gBAAgB,CAAC,kBAAkB,CAAC;;MAE7F;MACA,MAAMC,aAAa,GAAGC,sBAAsB,CAACL,eAAe,CAAC;MAC7DV,cAAc,CAACc,aAAa,CAAC;IAC/B;IAEAR,QAAQ,CAACU,gBAAgB,CAAC,WAAW,EAAEf,eAAe,CAAC;IAEvD,OAAO,MAAM;MACXK,QAAQ,CAACW,mBAAmB,CAAC,WAAW,EAAEhB,eAAe,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,SAASc,sBAAsBA,CAACG,KAAK,EAAE;IACrC;IACA,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAAC,kCAAkC,CAAC;IAC7D,IAAI,CAACA,KAAK,EAAE,OAAO,OAAO,CAAC,CAAC;;IAE5B;IACA,MAAML,aAAa,GAAI,OAAM,GAAG,GAAGK,KAAK,CAAC,CAAC,CAAE,KAAI,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAE,KAAI,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAE,GAAE;IACpF,OAAOL,aAAa;EACtB;EAEA,oBACEtB,OAAA;IAAK4B,SAAS,EAAC,eAAe;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAE3B,aAAa,CAACE,CAAC;MAAE0B,GAAG,EAAE5B,aAAa,CAACG,CAAC;MAAEY,eAAe,EAAEX;IAAY;EAAE;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAE/H;AAACjC,EAAA,CAtCQD,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAwCrB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}